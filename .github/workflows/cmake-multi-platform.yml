name: HtmlParser CMake multi-platform build test

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: windows-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      # Windows-specific build configuration
      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          & "C:/Program Files/CMake/bin/cmake.EXE" -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE `
          -S ${{ github.workspace }} `
          -B ${{ steps.strings.outputs.build-output-dir }} `
          -G "Visual Studio 17 2022" -T host=x86 -A win32 `
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          & "C:/Program Files/CMake/bin/cmake.EXE" --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

      # Linux-specific build configuration
      - name: Configure CMake (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cmake -B ${{ steps.strings.outputs.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -S${{ github.workspace }}

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}
